syntax = "proto3";

option go_package = "github.com/manaaan/ekolivs-oms/demand/api";

service DemandService {
  rpc CreateDemand(CreateDemand.Req) returns (Demand) {}
}

message CreateDemand {
  message Req {
    repeated ProductDemand products = 1;
    optional string note = 2;
    string memberID = 3;
  }
}

message Demand {
  string ID = 1;
  Status status = 2;
  string memberID = 3;
  repeated ProductDemand products = 4;
  // (Optional) demand parent, if demand can only be partially fulfilled and needs to be split
  optional string parentID = 5;
  optional string note = 6;
  // ISO 8601
  string createdAt = 7;
  // ISO 8601
  string updatedAt = 8;

  enum Status {
    DEMAND_RECEIVED = 0;
    DEMAND_ACCEPTED = 1;
    DEMAND_REJECTED = 2;
    ORDER_SENT_TO_SUPPLIER = 3;
    DEMAND_FULFILLED = 4;
    // Supplier accepted initially, but cannot fulfill delivery
    // We split demand if it can only be partially fulfilled.
    DEMAND_NOT_FULFILLED = 5;
    DEMAND_COLLECTED = 6;
  }
}

message ProductDemand {
  string productId = 1;
  int32 amount = 2;
}
